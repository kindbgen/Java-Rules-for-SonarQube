name: Spotless Auto Format

on:
  push:
    branches: [ "**" ]  # 所有分支的推送事件
  pull_request:
    branches: [ master, develop ]  # 监控的目标分支

concurrency:
  group: backend-${{ github.event.pull_request.number || github.ref }}

jobs:
  spotless-format:
#    if: github.repository != 'kindbgen/Java-Rules-for-SonarQube' && vars.SPOTLESS_FORMAT == 'true'
    # 对于push事件，如果最新提交包含[skip ci]则跳过；PR事件总是运行
    if: ${{ github.event_name != 'push' || !contains(github.event.commits[0].message, '[skip ci]') }}
    name: Run Spotless and apply fixes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          token: ${{ secrets.TOKEN }}
      # 步骤4: 应用Spotless格式化
      - name: Run spotless apply
#        run : ./mvnw -T 4C -B --no-snapshot-updates clean spotless:apply
        run : mvn -B spotless:apply
      # 步骤3: 检测是否有文件变更
      - name: Check for modified files
        id: git-check
        run: |
          echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
#      # 步骤4: 提交格式化后的变更
#      - name: Commit changes
#        uses: stefanzweifel/git-auto-commit-action@v4
#        if: steps.git-check.outputs.modified == 'true'
#        with:
#          commit_message: "Spotless Apply [skip ci]"
      # 步骤4: 提交格式化后的变更
      - name: Commit changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config user.name "Kindbgen"
          git config user.email "kindbgen@gmail.com"
          git add -u
          git commit -m "🤖 Auto-format with Spotless [skip ci]"
          git push origin HEAD:${{ github.event.pull_request.head.ref || github.ref_name }}